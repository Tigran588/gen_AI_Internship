# -*- coding: utf-8 -*-
"""Untitled33.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ezRBWFtrdS8r9y7L8jUOo_LG93O1OItE
"""

class ValidType:
  def __init__(self, spec_type):
    self.spec_type = spec_type
        #print("ValidType initializer")

  def check_type(self,val):
    return type(val) == self.spec_type

  def __set_name__(self,owner, name):
    self.name = '_'+ name
        #print("set_name")

  def __set__(self, instance, value):
    if not self.check_type(value):
      raise ValueError( 'value must be antoher type')
    instance.__dict__[self.name] = value

  def __get__(self, instance, owner):
    if instance is None:
      return None
    return instance.__dict__[self.name]

'Valid Type-i kody chkrknelu hamar Int,Float,List class-nery jarangum en ValideType-ic'
'Kareli er Chgrel Verjin 3 class-nery u stgumy anel miayn ValidTYpe-i mijocov ` grvel en pahanji mej linelu patcharov'


class Int(ValidType):
  def __init__(self):
    super().__init__(int)

class Float(ValidType):
  def __init__(self):
    super().__init__(float)

class List(ValidType):
  def __init__(self):
    super().__init__(list)

class Person:
  name = ValidType(str)
  age = Int()
  height = Float()
  favorite_food = List()
  tags = List()

  def __init__(self,name,age,height,tags,favorite_food):
    self.name = name
    self.age = age
    self.height = height
    self.tags = tags
    self.favorite_food = favorite_food

a = Person('Name',18,1.56,[12,3],['qabab','xorovac'])
a.__dict__